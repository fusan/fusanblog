{ Block:
   { [Function: Block]
     fromBuffer: [Function],
     fromHex: [Function],
     calculateTarget: [Function] },
  ECPair:
   { [Function: ECPair]
     fromPublicKeyBuffer: [Function],
     fromWIF: [Function],
     makeRandom: [Function] },
  ECSignature:
   { [Function: ECSignature]
     parseCompact: [Function],
     fromDER: [Function],
     parseScriptSignature: [Function] },
  HDNode:
   { [Function: HDNode]
     HIGHEST_BIT: 2147483648,
     LENGTH: 78,
     MASTER_SECRET: <Buffer 42 69 74 63 6f 69 6e 20 73 65 65 64>,
     fromSeedBuffer: [Function],
     fromSeedHex: [Function],
     fromBase58: [Function] },
  Transaction:
   { [Function: Transaction]
     DEFAULT_SEQUENCE: 4294967295,
     SIGHASH_ALL: 1,
     SIGHASH_NONE: 2,
     SIGHASH_SINGLE: 3,
     SIGHASH_ANYONECANPAY: 128,
     fromBuffer: [Function],
     fromHex: [Function],
     isCoinbaseHash: [Function] },
  TransactionBuilder: { [Function: TransactionBuilder] fromTransaction: [Function] },
  address:
   { fromBase58Check: [Function: fromBase58Check],
     fromOutputScript: [Function: fromOutputScript],
     toBase58Check: [Function: toBase58Check],
     toOutputScript: [Function: toOutputScript] },
  bufferutils:
   { equal: [Function],
     pushDataSize: [Function: pushDataSize],
     readPushDataInt: [Function: readPushDataInt],
     readUInt64LE: [Function: readUInt64LE],
     readVarInt: [Function: readVarInt],
     reverse: [Function: reverse],
     varIntBuffer: [Function: varIntBuffer],
     varIntSize: [Function: varIntSize],
     writePushDataInt: [Function: writePushDataInt],
     writeUInt64LE: [Function: writeUInt64LE],
     writeVarInt: [Function: writeVarInt] },
  crypto:
   { hash160: [Function: hash160],
     hash256: [Function: hash256],
     ripemd160: [Function: ripemd160],
     sha1: [Function: sha1],
     sha256: [Function: sha256] },
  message:
   { magicHash: [Function: magicHash],
     sign: [Function: sign],
     verify: [Function: verify] },
  networks:
   { bitcoin:
      { messagePrefix: '\u0018Bitcoin Signed Message:\n',
        bip32: [Object],
        pubKeyHash: 0,
        scriptHash: 5,
        wif: 128,
        dustThreshold: 546 },
     testnet:
      { messagePrefix: '\u0018Bitcoin Signed Message:\n',
        bip32: [Object],
        pubKeyHash: 111,
        scriptHash: 196,
        wif: 239,
        dustThreshold: 546 },
     litecoin:
      { messagePrefix: '\u0019Litecoin Signed Message:\n',
        bip32: [Object],
        pubKeyHash: 48,
        scriptHash: 5,
        wif: 176,
        dustThreshold: 0 },
     dogecoin:
      { messagePrefix: '\u0019Dogecoin Signed Message:\n',
        bip32: [Object],
        pubKeyHash: 30,
        scriptHash: 22,
        wif: 158,
        dustThreshold: 0 } },
  opcodes:
   { OP_FALSE: 0,
     OP_0: 0,
     OP_PUSHDATA1: 76,
     OP_PUSHDATA2: 77,
     OP_PUSHDATA4: 78,
     OP_1NEGATE: 79,
     OP_RESERVED: 80,
     OP_1: 81,
     OP_TRUE: 81,
     OP_2: 82,
     OP_3: 83,
     OP_4: 84,
     OP_5: 85,
     OP_6: 86,
     OP_7: 87,
     OP_8: 88,
     OP_9: 89,
     OP_10: 90,
     OP_11: 91,
     OP_12: 92,
     OP_13: 93,
     OP_14: 94,
     OP_15: 95,
     OP_16: 96,
     OP_NOP: 97,
     OP_VER: 98,
     OP_IF: 99,
     OP_NOTIF: 100,
     OP_VERIF: 101,
     OP_VERNOTIF: 102,
     OP_ELSE: 103,
     OP_ENDIF: 104,
     OP_VERIFY: 105,
     OP_RETURN: 106,
     OP_TOALTSTACK: 107,
     OP_FROMALTSTACK: 108,
     OP_2DROP: 109,
     OP_2DUP: 110,
     OP_3DUP: 111,
     OP_2OVER: 112,
     OP_2ROT: 113,
     OP_2SWAP: 114,
     OP_IFDUP: 115,
     OP_DEPTH: 116,
     OP_DROP: 117,
     OP_DUP: 118,
     OP_NIP: 119,
     OP_OVER: 120,
     OP_PICK: 121,
     OP_ROLL: 122,
     OP_ROT: 123,
     OP_SWAP: 124,
     OP_TUCK: 125,
     OP_CAT: 126,
     OP_SUBSTR: 127,
     OP_LEFT: 128,
     OP_RIGHT: 129,
     OP_SIZE: 130,
     OP_INVERT: 131,
     OP_AND: 132,
     OP_OR: 133,
     OP_XOR: 134,
     OP_EQUAL: 135,
     OP_EQUALVERIFY: 136,
     OP_RESERVED1: 137,
     OP_RESERVED2: 138,
     OP_1ADD: 139,
     OP_1SUB: 140,
     OP_2MUL: 141,
     OP_2DIV: 142,
     OP_NEGATE: 143,
     OP_ABS: 144,
     OP_NOT: 145,
     OP_0NOTEQUAL: 146,
     OP_ADD: 147,
     OP_SUB: 148,
     OP_MUL: 149,
     OP_DIV: 150,
     OP_MOD: 151,
     OP_LSHIFT: 152,
     OP_RSHIFT: 153,
     OP_BOOLAND: 154,
     OP_BOOLOR: 155,
     OP_NUMEQUAL: 156,
     OP_NUMEQUALVERIFY: 157,
     OP_NUMNOTEQUAL: 158,
     OP_LESSTHAN: 159,
     OP_GREATERTHAN: 160,
     OP_LESSTHANOREQUAL: 161,
     OP_GREATERTHANOREQUAL: 162,
     OP_MIN: 163,
     OP_MAX: 164,
     OP_WITHIN: 165,
     OP_RIPEMD160: 166,
     OP_SHA1: 167,
     OP_SHA256: 168,
     OP_HASH160: 169,
     OP_HASH256: 170,
     OP_CODESEPARATOR: 171,
     OP_CHECKSIG: 172,
     OP_CHECKSIGVERIFY: 173,
     OP_CHECKMULTISIG: 174,
     OP_CHECKMULTISIGVERIFY: 175,
     OP_NOP1: 176,
     OP_NOP2: 177,
     OP_CHECKLOCKTIMEVERIFY: 177,
     OP_NOP3: 178,
     OP_NOP4: 179,
     OP_NOP5: 180,
     OP_NOP6: 181,
     OP_NOP7: 182,
     OP_NOP8: 183,
     OP_NOP9: 184,
     OP_NOP10: 185,
     OP_PUBKEYHASH: 253,
     OP_PUBKEY: 254,
     OP_INVALIDOPCODE: 255 },
  script:
   { compile: [Function: compile],
     decompile: [Function: decompile],
     fromASM: [Function: fromASM],
     toASM: [Function: toASM],
     number: { decode: [Function: decode], encode: [Function: encode] },
     isCanonicalPubKey: [Function: isCanonicalPubKey],
     isCanonicalSignature: [Function: isCanonicalSignature],
     isDefinedHashType: [Function: isDefinedHashType],
     isPubKeyHashInput: [Function: isPubKeyHashInput],
     isPubKeyHashOutput: [Function: isPubKeyHashOutput],
     isPubKeyInput: [Function: isPubKeyInput],
     isPubKeyOutput: [Function: isPubKeyOutput],
     isScriptHashInput: [Function: isScriptHashInput],
     isScriptHashOutput: [Function: isScriptHashOutput],
     isMultisigInput: [Function: isMultisigInput],
     isMultisigOutput: [Function: isMultisigOutput],
     isNullDataOutput: [Function: isNullDataOutput],
     classifyOutput: [Function: classifyOutput],
     classifyInput: [Function: classifyInput],
     pubKeyOutput: [Function: pubKeyOutput],
     pubKeyHashOutput: [Function: pubKeyHashOutput],
     scriptHashOutput: [Function: scriptHashOutput],
     multisigOutput: [Function: multisigOutput],
     pubKeyInput: [Function: pubKeyInput],
     pubKeyHashInput: [Function: pubKeyHashInput],
     scriptHashInput: [Function: scriptHashInput],
     multisigInput: [Function: multisigInput],
     nullDataOutput: [Function: nullDataOutput] },
  prevTxMap: {},
  prevOutScripts: {},
  prevOutTypes: {},
  network:
   { messagePrefix: '\u0018Bitcoin Signed Message:\n',
     bip32: { public: 76067358, private: 76066276 },
     pubKeyHash: 0,
     scriptHash: 5,
     wif: 128,
     dustThreshold: 546 },
  inputs: [],
  tx: Transaction { version: 1, locktime: 0, ins: [], outs: [] } }
